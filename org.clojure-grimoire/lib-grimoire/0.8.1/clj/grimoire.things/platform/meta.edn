{:ns "grimoire.things", :name "platform", :file "grimoire/things.clj", :type :var, :src "(v/deftag platform\n  \"Represents a Clojure \\\"platform\\\" rooted on a version of an\n  artifact.\n\n  Platforms are a construct and represent a versioned set of\n  namespaces (and thus of defs) defining the versioned package at that\n  version. The idea is that a single artifact may have \\\"platform\\\"\n  code for any of Clojure, ClojureScript, ClojureCLR and soforth\n  simultaneously. Selecting a platform in a tree thus selects a set of\n  namespaces and defs which are particular to this platform. It also\n  allows Grimoire to host what would otherwise be name-colliding\n  functions which are really implicitly differentiated by platform.\"\n  [parent, name]\n  {:pre [(version? parent)\n         (string? name)]})", :column 1, :line 39, :doc "Represents a Clojure \"platform\" rooted on a version of an\n  artifact.\n\n  Platforms are a construct and represent a versioned set of\n  namespaces (and thus of defs) defining the versioned package at that\n  version. The idea is that a single artifact may have \"platform\"\n  code for any of Clojure, ClojureScript, ClojureCLR and soforth\n  simultaneously. Selecting a platform in a tree thus selects a set of\n  namespaces and defs which are particular to this platform. It also\n  allows Grimoire to host what would otherwise be name-colliding\n  functions which are really implicitly differentiated by platform."}