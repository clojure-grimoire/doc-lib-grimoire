{:ns "grimoire.things", :name "thing->group", :file "grimoire/things.clj", :type :fn, :src "(defn thing->group\n  \"Function from a Thing to a Group. If the Thing is rooted on a Group,\n  or is a Group, traverses thing->parent until a Group is produced. Otherwise\n  returns nil.\"\n  [t]\n  {:pre [(thing? t)]}\n  (when (grouped? t)\n    (if-not (group? t)\n      (when t\n        (recur (thing->parent t)))\n      t)))", :column 1, :line 301, :arglists ([t]), :doc "Function from a Thing to a Group. If the Thing is rooted on a Group,\n  or is a Group, traverses thing->parent until a Group is produced. Otherwise\n  returns nil."}