{:ns "grimoire.api.fs.impl", :name "thing->handle", :file "grimoire/api/fs/impl.clj", :type :fn, :src "(defn thing->handle\n  \"Helper for grabbing handles for reading/writing.\n\n  :meta     -> .edn file\n  :related  -> .txt\n  :notes    -> .md file\n  :examples -> /examples/\n  :else     -> /\"\n\n  [cfg which thing]\n  {:pre  [(#{:meta :related :notes :examples :else} which)\n          (t/thing? thing)\n          (Config? cfg)]\n   :post [(file? %)]}\n  (let [d (get cfg ({:meta     :docs\n                     :else     :docs     ;; FIXME: is this really the default case? seems janky.\n                     :related  :notes\n                     :notes    :notes\n                     :examples :examples}\n                    which))\n        e (case which\n            (:meta)     \"/meta.edn\"\n            (:related)  \"/related.txt\"\n            (:examples) \"/examples/\"\n            (:notes)    \"/notes.md\"\n            nil)\n        h (io/file (str d \"/\" (t/thing->url-path thing) e))]\n    h))", :column 1, :line 19, :arglists ([cfg which thing]), :doc "Helper for grabbing handles for reading/writing.\n\n  :meta     -> .edn file\n  :related  -> .txt\n  :notes    -> .md file\n  :examples -> /examples/\n  :else     -> /"}