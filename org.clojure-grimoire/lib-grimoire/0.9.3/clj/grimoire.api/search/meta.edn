{:ns "grimoire.api", :name "search", :file "grimoire/api.clj", :type :fn, :src "(defn search\n  \"Succeeds with a result Seq[Thing], being a list of all the Things in the\n  given datastore which match the given search structure.\n\n  Search patterns are vectors of the form [<type> &parts] where a type is one of\n  the Thing keywords, and &parts is a sequence terms being either sets of\n  strings, strings, regexes, functions, nil or the keyword :any.\n\n  - nil as a term matches any Thing\n  - :any as a term matches any Thing\n  - Sets as a term match Thing with its Name in the set\n  - Strings as a term match any Thing with an equal Name\n  - Regexps as a Term match any Thing with a matching Name\n  - Fns as a term match any Thing such that (f T) is truthy\n\n  Examples:\n  > [:def :any :any :any :any \\\"clojure.core\\\" \\\"concat\\\"]\n\n  Will match all instances of Defs named \\\"clojure.core/concat\\\" on all\n  platforms in all versions in all artifacts in all groups.\n\n  > [:ns :any \\\"clojure\\\" :any :any \\\"clojure.set\\\"]\n\n  Will match all instances of Nss named \\\"clojure.set\\\" in all artifacts named\n  \\\"clojure\\\" in all versions, platforms and groups.\n\n  > [:ns #\\\"org.*\\\" :any :any :any :any]\n\n  Will match all instances of Ns in any platform of any version of any artifact\n  in a Maven group matching the regex #\\\"org.*\\\"\"\n\n  [config pattern]\n  (-search config pattern))", :column 1, :line 437, :arglists ([config pattern]), :doc "Succeeds with a result Seq[Thing], being a list of all the Things in the\n  given datastore which match the given search structure.\n\n  Search patterns are vectors of the form [<type> &parts] where a type is one of\n  the Thing keywords, and &parts is a sequence terms being either sets of\n  strings, strings, regexes, functions, nil or the keyword :any.\n\n  - nil as a term matches any Thing\n  - :any as a term matches any Thing\n  - Sets as a term match Thing with its Name in the set\n  - Strings as a term match any Thing with an equal Name\n  - Regexps as a Term match any Thing with a matching Name\n  - Fns as a term match any Thing such that (f T) is truthy\n\n  Examples:\n  > [:def :any :any :any :any \"clojure.core\" \"concat\"]\n\n  Will match all instances of Defs named \"clojure.core/concat\" on all\n  platforms in all versions in all artifacts in all groups.\n\n  > [:ns :any \"clojure\" :any :any \"clojure.set\"]\n\n  Will match all instances of Nss named \"clojure.set\" in all artifacts named\n  \"clojure\" in all versions, platforms and groups.\n\n  > [:ns #\"org.*\" :any :any :any :any]\n\n  Will match all instances of Ns in any platform of any version of any artifact\n  in a Maven group matching the regex #\"org.*\""}