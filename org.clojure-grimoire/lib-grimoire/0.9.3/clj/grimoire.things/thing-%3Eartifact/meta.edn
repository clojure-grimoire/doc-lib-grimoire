{:ns "grimoire.things", :name "thing->artifact", :file "grimoire/things.clj", :type :fn, :src "(defn thing->artifact\n  \"Function from a Thing to an Artifact. If the Thing is rooted on an Artifact,\n  or is an Artifact, traverses thing->parent until the rooting Artifact is\n  reached and then returns that value. Otherwise returns nil.\"\n  [t]\n  {:pre [(thing? t)]}\n  (when (artifacted? t)\n    (if-not (artifact? t)\n      (when t\n        (recur (thing->parent t)))\n      t)))", :column 1, :line 306, :arglists ([t]), :doc "Function from a Thing to an Artifact. If the Thing is rooted on an Artifact,\n  or is an Artifact, traverses thing->parent until the rooting Artifact is\n  reached and then returns that value. Otherwise returns nil."}