{:ns "grimoire.things", :name "thing->root-to", :file "grimoire/things.clj", :type :fn, :src "(defn thing->root-to\n  \"Complement of thing->relative-path. Given a Thing instance and a Thing type,\n  returns the subpath of the given Thing instance from the root (Group) to the\n  given Thing type.\"\n  [t thing]\n  {:pre [(thing? thing)\n         (t/TagDescriptor? t)]}\n  (->> thing\n       (iterate thing->parent)\n       (take-while identity)\n       (drop-while #(not= (t/tag %1) (:tag t)))\n       (reverse)\n       (map thing->name)\n       (interpose \"/\")\n       (apply str)))", :column 1, :line 258, :arglists ([t thing]), :doc "Complement of thing->relative-path. Given a Thing instance and a Thing type,\n  returns the subpath of the given Thing instance from the root (Group) to the\n  given Thing type."}