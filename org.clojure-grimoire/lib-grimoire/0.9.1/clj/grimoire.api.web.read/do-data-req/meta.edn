{:ns "grimoire.api.web.read", :name "do-data-req", :file "grimoire/api/web/read.clj", :type :fn, :src "(defn do-data-req\n  \"λ [Cfg → Thing → Op] → Either[Success[t], Failure[String]]\n\n  Forges and executes a data request agains the Grimoire web API as specified by\n  the various arguments. Returns the entire result of the Grimoire request\n  unaltered and wrapped in Either.\"\n  [config thing op]\n  {:post [(either? %)]}\n  (let [res-string (web/make-api-url config thing op)\n        ?res       (-> res-string slurp edn/read-string)]\n    ((if (grim-succeed? ?res)\n       succeed fail)\n     (grim-result ?res))))", :column 1, :line 38, :arglists ([config thing op]), :doc "λ [Cfg → Thing → Op] → Either[Success[t], Failure[String]]\n\n  Forges and executes a data request agains the Grimoire web API as specified by\n  the various arguments. Returns the entire result of the Grimoire request\n  unaltered and wrapped in Either."}