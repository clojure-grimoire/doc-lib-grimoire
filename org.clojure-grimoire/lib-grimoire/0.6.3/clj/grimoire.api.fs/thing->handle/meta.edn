{:ns "grimoire.api.fs", :name "thing->handle", :file "grimoire/api/fs.clj", :type :fn, :src "(defn thing->handle\n  \"Helper for grabbing handles for reading/writing.\n\n  :meta     -> .edn file\n  :related  -> .txt\n  :notes    -> .md file\n  :examples -> dir\"\n\n  [{store :datastore} which thing]\n  (let [which-store (if-not (= :notes which)\n                      :docs :notes)\n        d           (get store which (which-store store))\n        parent      (:parent thing)\n        p           (io/file (str d \"/\" (when parent (thing->path parent))))\n        e           (case which\n                      (:meta)     \"/meta.edn\"\n                      (:related)  \"/related.txt\"\n                      (:examples) \"/examples/\"\n                      (:notes)    \"/notes.md\"\n                      nil)\n        n           (if (= :def (:type thing))\n                      (util/munge (:name thing))\n                      (:name thing))\n        h           (io/file p (str n e))]\n    h))", :column 1, :line 10, :arglists ([{store :datastore} which thing]), :doc "Helper for grabbing handles for reading/writing.\n\n  :meta     -> .edn file\n  :related  -> .txt\n  :notes    -> .md file\n  :examples -> dir"}